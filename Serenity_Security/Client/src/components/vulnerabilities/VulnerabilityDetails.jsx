import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { getVulnerabilityById } from "../../managers/vulnerabilityManager";

export const VulnerabilityDetails = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const [vulnerability, setVulnerability] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    getVulnerabilityById(id)
      .then((data) => {
        setVulnerability(data);
        setLoading(false);
      })
      .catch((err) => {
        setError("Failed to load vulnerability data: " + err.message);
        setLoading(false);
      });
  }, [id]);

  if (loading) {
    return <div>Loading vulnerability data...</div>;
  }

  if (error) {
    return <div className="error">{error}</div>;
  }

  if (!vulnerability) {
    return <div>Vulnerability not found</div>;
  }

  const formatDate = (dateString) => {
    if (!dateString) return "Not available";
    const date = new Date(dateString);
    return date.toLocaleDateString();
  };

  const getSeverityBadgeClass = (severity) => {
    switch (severity.toLowerCase()) {
      case "critical":
        return "bg-danger";
      case "high":
        return "bg-warning text-dark";
      case "medium":
        return "bg-info text-dark";
      case "low":
        return "bg-success";
      default:
        return "bg-secondary";
    }
  };

  return (
    <div className="container mt-4">
      <div className="d-flex justify-content-between align-items-center mb-4">
        <h2>Vulnerability Details</h2>
        <button className="btn btn-secondary" onClick={() => navigate(-1)}>
          Back to Report
        </button>
      </div>

      <div className="card">
        <div className="card-header">
          <h4 className="mb-0">{vulnerability.cveId}</h4>
        </div>
        <div className="card-body">
          <table className="table table-bordered">
            <tbody>
              <tr>
                <th style={{ width: "20%" }}>CVE ID</th>
                <td>{vulnerability.cveId}</td>
              </tr>
              <tr>
                <th>Description</th>
                <td>{vulnerability.description}</td>
              </tr>
              <tr>
                <th>CVSS Score</th>
                <td>{vulnerability.cvsScore.toFixed(1)}</td>
              </tr>
              <tr>
                <th>Severity Level</th>
                <td>
                  <span className={`badge ${getSeverityBadgeClass(vulnerability.severityLevel)}`}>
                    {vulnerability.severityLevel}
                  </span>
                </td>
              </tr>
              <tr>
                <th>Published Date</th>
                <td>{formatDate(vulnerability.publishedAt)}</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
};